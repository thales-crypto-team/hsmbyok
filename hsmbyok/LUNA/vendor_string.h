/*****************************************************************************
*
* Copyright (c) 2019 SafeNet. All rights reserved.
*
* This file contains information that is proprietary to SafeNet and may not be
* distributed or copied without written consent in SafeNet.
*
*****************************************************************************/

#include "vendor_ckr.h"
#include "vendor_ckk.h"

#define CASE_DEFINE_TO_STR(_x) case _x: return #_x

/*****************************************************************************
*
* FUNCTION     : GetErrorCode()
*
* DESCRIPTION  : Returns a string that represent the input error code.
*
* PARAMETERS   : CK_RV usErrorCode
*
* RETURN VALUE : char *
*
* NOTE         : When adding an error code remember to add it and its string to
*                CKR_LookupTable[] and routine GetErrorCodeForString().
*
\****************************************************************************/
const char *GetErrorCode(CK_RV usErrorCode)
{
    switch ( usErrorCode )
    {
    CASE_DEFINE_TO_STR(CKR_OK);
    CASE_DEFINE_TO_STR(CKR_CANCEL);
    CASE_DEFINE_TO_STR(CKR_HOST_MEMORY);
    CASE_DEFINE_TO_STR(CKR_SLOT_ID_INVALID);

    CASE_DEFINE_TO_STR(CKR_GENERAL_ERROR);
    CASE_DEFINE_TO_STR(CKR_FUNCTION_FAILED);
    CASE_DEFINE_TO_STR(CKR_ARGUMENTS_BAD);
    CASE_DEFINE_TO_STR(CKR_NO_EVENT);
    CASE_DEFINE_TO_STR(CKR_NEED_TO_CREATE_THREADS);
    CASE_DEFINE_TO_STR(CKR_CANT_LOCK);

    CASE_DEFINE_TO_STR(CKR_ATTRIBUTE_READ_ONLY);
    CASE_DEFINE_TO_STR(CKR_ATTRIBUTE_SENSITIVE);
    CASE_DEFINE_TO_STR(CKR_ATTRIBUTE_TYPE_INVALID);
    CASE_DEFINE_TO_STR(CKR_ATTRIBUTE_VALUE_INVALID);
    CASE_DEFINE_TO_STR(CKR_DATA_INVALID);
    CASE_DEFINE_TO_STR(CKR_DATA_LEN_RANGE);
    CASE_DEFINE_TO_STR(CKR_DEVICE_ERROR);
    CASE_DEFINE_TO_STR(CKR_DEVICE_MEMORY);
    CASE_DEFINE_TO_STR(CKR_DEVICE_REMOVED);
    CASE_DEFINE_TO_STR(CKR_ENCRYPTED_DATA_INVALID);
    CASE_DEFINE_TO_STR(CKR_ENCRYPTED_DATA_LEN_RANGE);
    CASE_DEFINE_TO_STR(CKR_FUNCTION_CANCELED);
    CASE_DEFINE_TO_STR(CKR_FUNCTION_NOT_PARALLEL);
    CASE_DEFINE_TO_STR(CKR_FUNCTION_PARALLEL);
    CASE_DEFINE_TO_STR(CKR_FUNCTION_NOT_SUPPORTED);
    CASE_DEFINE_TO_STR(CKR_KEY_HANDLE_INVALID);
    CASE_DEFINE_TO_STR(CKR_KEY_SIZE_RANGE);
    CASE_DEFINE_TO_STR(CKR_KEY_TYPE_INCONSISTENT);

    CASE_DEFINE_TO_STR(CKR_KEY_UNEXTRACTABLE);
    CASE_DEFINE_TO_STR(CKR_KEY_NOT_NEEDED);
    CASE_DEFINE_TO_STR(CKR_KEY_CHANGED);
    CASE_DEFINE_TO_STR(CKR_KEY_NEEDED);
    CASE_DEFINE_TO_STR(CKR_KEY_INDIGESTIBLE);
    CASE_DEFINE_TO_STR(CKR_KEY_FUNCTION_NOT_PERMITTED);
    CASE_DEFINE_TO_STR(CKR_KEY_NOT_WRAPPABLE);

    CASE_DEFINE_TO_STR(CKR_MECHANISM_INVALID);
    CASE_DEFINE_TO_STR(CKR_MECHANISM_PARAM_INVALID);

    CASE_DEFINE_TO_STR(CKR_OBJECT_HANDLE_INVALID);
    CASE_DEFINE_TO_STR(CKR_OPERATION_ACTIVE);
    CASE_DEFINE_TO_STR(CKR_OPERATION_NOT_INITIALIZED);
    CASE_DEFINE_TO_STR(CKR_PIN_INCORRECT);
    CASE_DEFINE_TO_STR(CKR_PIN_INVALID);
    CASE_DEFINE_TO_STR(CKR_PIN_LEN_RANGE);
    CASE_DEFINE_TO_STR(CKR_PIN_EXPIRED);
    CASE_DEFINE_TO_STR(CKR_PIN_LOCKED);

    CASE_DEFINE_TO_STR(CKR_SESSION_CLOSED);
    CASE_DEFINE_TO_STR(CKR_SESSION_COUNT);
    CASE_DEFINE_TO_STR(CKR_SESSION_EXCLUSIVE_EXISTS);
    CASE_DEFINE_TO_STR(CKR_SESSION_HANDLE_INVALID);
    CASE_DEFINE_TO_STR(CKR_SESSION_PARALLEL_NOT_SUPPORTED);
    CASE_DEFINE_TO_STR(CKR_SESSION_READ_ONLY);

    CASE_DEFINE_TO_STR(CKR_SESSION_EXISTS);
    CASE_DEFINE_TO_STR(CKR_SESSION_READ_ONLY_EXISTS);
    CASE_DEFINE_TO_STR(CKR_SESSION_READ_WRITE_SO_EXISTS);

    CASE_DEFINE_TO_STR(CKR_SIGNATURE_INVALID);
    CASE_DEFINE_TO_STR(CKR_SIGNATURE_LEN_RANGE);
    CASE_DEFINE_TO_STR(CKR_TEMPLATE_INCOMPLETE);
    CASE_DEFINE_TO_STR(CKR_TEMPLATE_INCONSISTENT);
    CASE_DEFINE_TO_STR(CKR_TOKEN_NOT_PRESENT);
    CASE_DEFINE_TO_STR(CKR_TOKEN_NOT_RECOGNIZED);
    CASE_DEFINE_TO_STR(CKR_TOKEN_WRITE_PROTECTED);
    CASE_DEFINE_TO_STR(CKR_UNWRAPPING_KEY_HANDLE_INVALID);
    CASE_DEFINE_TO_STR(CKR_UNWRAPPING_KEY_SIZE_RANGE);
    CASE_DEFINE_TO_STR(CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT);

    CASE_DEFINE_TO_STR(CKR_USER_ALREADY_LOGGED_IN);
    CASE_DEFINE_TO_STR(CKR_USER_NOT_LOGGED_IN);
    CASE_DEFINE_TO_STR(CKR_USER_PIN_NOT_INITIALIZED);
    CASE_DEFINE_TO_STR(CKR_USER_TYPE_INVALID);
    CASE_DEFINE_TO_STR(CKR_USER_ANOTHER_ALREADY_LOGGED_IN);
    CASE_DEFINE_TO_STR(CKR_USER_TOO_MANY_TYPES);

    CASE_DEFINE_TO_STR(CKR_WRAPPED_KEY_INVALID);
    CASE_DEFINE_TO_STR(CKR_WRAPPED_KEY_LEN_RANGE);
    CASE_DEFINE_TO_STR(CKR_WRAPPING_KEY_HANDLE_INVALID);
    CASE_DEFINE_TO_STR(CKR_WRAPPING_KEY_SIZE_RANGE);
    CASE_DEFINE_TO_STR(CKR_WRAPPING_KEY_TYPE_INCONSISTENT);

    CASE_DEFINE_TO_STR(CKR_RANDOM_SEED_NOT_SUPPORTED);
    CASE_DEFINE_TO_STR(CKR_RANDOM_NO_RNG);
    CASE_DEFINE_TO_STR(CKR_DOMAIN_PARAMS_INVALID);
    CASE_DEFINE_TO_STR(CKR_INSERTION_CALLBACK_NOT_SUPPORTED);
    CASE_DEFINE_TO_STR(CKR_BUFFER_TOO_SMALL);

    CASE_DEFINE_TO_STR(CKR_SAVED_STATE_INVALID);
    CASE_DEFINE_TO_STR(CKR_INFORMATION_SENSITIVE);
    CASE_DEFINE_TO_STR(CKR_STATE_UNSAVEABLE);

    CASE_DEFINE_TO_STR(CKR_CRYPTOKI_NOT_INITIALIZED);
    CASE_DEFINE_TO_STR(CKR_CRYPTOKI_ALREADY_INITIALIZED);
    CASE_DEFINE_TO_STR(CKR_MUTEX_BAD);
    CASE_DEFINE_TO_STR(CKR_MUTEX_NOT_LOCKED);

    CASE_DEFINE_TO_STR(CKR_VENDOR_DEFINED);

    CASE_DEFINE_TO_STR(CKR_RC_ERROR);
    CASE_DEFINE_TO_STR(CKR_CONTAINER_HANDLE_INVALID);
    CASE_DEFINE_TO_STR(CKR_TOO_MANY_CONTAINERS);
    CASE_DEFINE_TO_STR(CKR_USER_LOCKED_OUT);
    CASE_DEFINE_TO_STR(CKR_CLONING_PARAMETER_ALREADY_EXISTS);
    CASE_DEFINE_TO_STR(CKR_CLONING_PARAMETER_MISSING);
    CASE_DEFINE_TO_STR(CKR_CERTIFICATE_DATA_MISSING);
    CASE_DEFINE_TO_STR(CKR_CERTIFICATE_DATA_INVALID);
    CASE_DEFINE_TO_STR(CKR_CERTIFICATE_TYPE_INVALID);
    CASE_DEFINE_TO_STR(CKR_INVALID_UTILIZATION_METRICS);
    CASE_DEFINE_TO_STR(CKR_UTILIZATION_BIN_ID_INVALID);
    CASE_DEFINE_TO_STR(CKR_UTILIZATION_COUNTER_ID_INVALID);
    CASE_DEFINE_TO_STR(CKR_INVALID_SERIAL_NUM);

    CASE_DEFINE_TO_STR(CKR_FM_ID_INVALID);
    CASE_DEFINE_TO_STR(CKR_FM_NOT_SUPPORTED);
    CASE_DEFINE_TO_STR(CKR_FM_NEVER_ENABLED);
    CASE_DEFINE_TO_STR(CKR_FM_DISABLED);
    CASE_DEFINE_TO_STR(CKR_FM_SMFS_INACTIVE);
    CASE_DEFINE_TO_STR(CKR_FM_CFG_ALLOWEDFLAG_DISABLED);

    CASE_DEFINE_TO_STR(CKR_ACCEL_DEVICE_ERROR);
    CASE_DEFINE_TO_STR(CKR_WRAPPING_ERROR);
    CASE_DEFINE_TO_STR(CKR_UNWRAPPING_ERROR);
    CASE_DEFINE_TO_STR(CKR_MAC_MISSING);
    CASE_DEFINE_TO_STR(CKR_DAC_POLICY_PID_MISMATCH);
    CASE_DEFINE_TO_STR(CKR_DAC_MISSING);
    CASE_DEFINE_TO_STR(CKR_BAD_DAC);
    CASE_DEFINE_TO_STR(CKR_SSK_MISSING);
    CASE_DEFINE_TO_STR(CKR_BAD_MAC);
    CASE_DEFINE_TO_STR(CKR_DAK_MISSING);
    CASE_DEFINE_TO_STR(CKR_BAD_DAK);
    CASE_DEFINE_TO_STR(CKR_SIM_AUTHORIZATION_FAILED);
    CASE_DEFINE_TO_STR(CKR_SIM_VERSION_UNSUPPORTED);
    CASE_DEFINE_TO_STR(CKR_SIM_CORRUPT_DATA);
    CASE_DEFINE_TO_STR(CKR_USER_NOT_AUTHORIZED);
    CASE_DEFINE_TO_STR(CKR_MAX_OBJECT_COUNT_EXCEEDED);
    CASE_DEFINE_TO_STR(CKR_SO_LOGIN_FAILURE_THRESHOLD);
    CASE_DEFINE_TO_STR(CKR_SIM_AUTHFORM_INVALID);
    CASE_DEFINE_TO_STR(CKR_CITS_DAK_MISSING);
    CASE_DEFINE_TO_STR(CKR_UNABLE_TO_CONNECT);
    CASE_DEFINE_TO_STR(CKR_PARTITION_DISABLED);
    CASE_DEFINE_TO_STR(CKR_CALLBACK_ERROR);
    CASE_DEFINE_TO_STR(CKR_SECURITY_PARAMETER_MISSING);
    CASE_DEFINE_TO_STR(CKR_SP_TIMEOUT);
    CASE_DEFINE_TO_STR(CKR_TIMEOUT);
    CASE_DEFINE_TO_STR(CKR_ECC_UNKNOWN_CURVE);
    CASE_DEFINE_TO_STR(CKR_MTK_ZEROIZED);
    CASE_DEFINE_TO_STR(CKR_MTK_STATE_INVALID);
    CASE_DEFINE_TO_STR(CKR_MTK_SPLIT_INVALID);
    CASE_DEFINE_TO_STR(CKR_CMD_NOT_ALLOWED_HSM_IN_TRANSPORT);
    CASE_DEFINE_TO_STR(CKR_HSM_TAMPERED);
    CASE_DEFINE_TO_STR(CKR_INVALID_ENTRY_TYPE);
    CASE_DEFINE_TO_STR(CKR_HSM_STORAGE_FULL);
    CASE_DEFINE_TO_STR(CKR_CONTAINER_OBJECT_STORAGE_FULL);
    CASE_DEFINE_TO_STR(CKR_DEVICE_TIMEOUT);
    CASE_DEFINE_TO_STR(CKR_KEY_NOT_ACTIVE);

    CASE_DEFINE_TO_STR(CKR_KEY_NOT_KEKABLE);
    CASE_DEFINE_TO_STR(CKR_MECHANISM_INVALID_FOR_FP);
    CASE_DEFINE_TO_STR(CKR_OPERATION_INVALID_FOR_FP);
    CASE_DEFINE_TO_STR(CKR_SESSION_HANDLE_INVALID_FOR_FP);

    CASE_DEFINE_TO_STR(CKR_OBJECT_READ_ONLY);
    CASE_DEFINE_TO_STR(CKR_PED_UNPLUGGED);
    CASE_DEFINE_TO_STR(CKR_ECC_POINT_INVALID);
    CASE_DEFINE_TO_STR(CKR_CONFIG_CHANGE_ILLEGAL);
    CASE_DEFINE_TO_STR(CKR_OPERATION_NOT_ALLOWED);
    CASE_DEFINE_TO_STR(CKR_LICENSE_CAPACITY_EXCEEDED);
    CASE_DEFINE_TO_STR(CKR_SLOT_NOT_EMPTY);
    CASE_DEFINE_TO_STR(CKR_USER_ALREADY_ACTIVATED);

    CASE_DEFINE_TO_STR(CKR_LOG_FILE_NOT_OPEN);
    CASE_DEFINE_TO_STR(CKR_LOG_FILE_WRITE_ERROR);
    CASE_DEFINE_TO_STR(CKR_LOG_BAD_FILE_NAME);
    CASE_DEFINE_TO_STR(CKR_LOG_FULL);
    CASE_DEFINE_TO_STR(CKR_LOG_NO_KCV);
    CASE_DEFINE_TO_STR(CKR_LOG_BAD_RECORD_HMAC);
    CASE_DEFINE_TO_STR(CKR_LOG_BAD_TIME);
    CASE_DEFINE_TO_STR(CKR_LOG_AUDIT_NOT_INITIALIZED);
    CASE_DEFINE_TO_STR(CKR_LOG_RESYNC_NEEDED);
    CASE_DEFINE_TO_STR(CKR_AUDIT_LOGIN_TIMEOUT_IN_PROGRESS);
    CASE_DEFINE_TO_STR(CKR_AUDIT_LOGIN_FAILURE_THRESHOLD);
    CASE_DEFINE_TO_STR(CKR_INVALID_FUF_TARGET);
    CASE_DEFINE_TO_STR(CKR_INVALID_FUF_HEADER);
    CASE_DEFINE_TO_STR(CKR_INVALID_FUF_VERSION);

    CASE_DEFINE_TO_STR(CKR_STC_NO_CONTEXT);
    CASE_DEFINE_TO_STR(CKR_STC_CLIENT_IDENTITY_NOT_CONFIGURED);
    CASE_DEFINE_TO_STR(CKR_STC_PARTITION_IDENTITY_NOT_CONFIGURED);
    CASE_DEFINE_TO_STR(CKR_STC_DH_KEYGEN_ERROR);
    CASE_DEFINE_TO_STR(CKR_STC_CIPHER_SUITE_REJECTED);
    CASE_DEFINE_TO_STR(CKR_STC_DH_KEY_NOT_FROM_SAME_GROUP);
    CASE_DEFINE_TO_STR(CKR_STC_COMPUTE_DH_KEY_ERROR);
    CASE_DEFINE_TO_STR(CKR_STC_FIRST_PHASE_KDF_ERROR);
    CASE_DEFINE_TO_STR(CKR_STC_SECOND_PHASE_KDF_ERROR);
    CASE_DEFINE_TO_STR(CKR_STC_KEY_CONFIRMATION_FAILED);
    CASE_DEFINE_TO_STR(CKR_STC_NO_SESSION_KEY);
    CASE_DEFINE_TO_STR(CKR_STC_RESPONSE_BAD_MAC);
    CASE_DEFINE_TO_STR(CKR_STC_NOT_ENABLED);
    CASE_DEFINE_TO_STR(CKR_STC_CLIENT_HANDLE_INVALID);
    CASE_DEFINE_TO_STR(CKR_STC_SESSION_INVALID);
    CASE_DEFINE_TO_STR(CKR_STC_CONTAINER_INVALID);
    CASE_DEFINE_TO_STR(CKR_STC_SEQUENCE_NUM_INVALID);
    CASE_DEFINE_TO_STR(CKR_STC_NO_CHANNEL);
    CASE_DEFINE_TO_STR(CKR_STC_RESPONSE_DECRYPT_ERROR);
    CASE_DEFINE_TO_STR(CKR_STC_RESPONSE_REPLAYED);
    CASE_DEFINE_TO_STR(CKR_STC_REKEY_CHANNEL_MISMATCH);
    CASE_DEFINE_TO_STR(CKR_STC_RSA_ENCRYPT_ERROR);
    CASE_DEFINE_TO_STR(CKR_STC_RSA_SIGN_ERROR);
    CASE_DEFINE_TO_STR(CKR_STC_RSA_DECRYPT_ERROR);
    CASE_DEFINE_TO_STR(CKR_STC_RESPONSE_UNEXPECTED_KEY);
    CASE_DEFINE_TO_STR(CKR_STC_UNEXPECTED_NONCE_PAYLOAD_SIZE);
    CASE_DEFINE_TO_STR(CKR_STC_UNEXPECTED_DH_DATA_SIZE);
    CASE_DEFINE_TO_STR(CKR_STC_OPEN_CIPHER_MISMATCH);
    CASE_DEFINE_TO_STR(CKR_STC_OPEN_DHNIST_PUBKEY_ERROR);
    CASE_DEFINE_TO_STR(CKR_STC_OPEN_KEY_MATERIAL_GEN_FAIL);
    CASE_DEFINE_TO_STR(CKR_STC_OPEN_RESP_GEN_FAIL);
    CASE_DEFINE_TO_STR(CKR_STC_ACTIVATE_MACTAG_U_VERIFY_FAIL);
    CASE_DEFINE_TO_STR(CKR_STC_ACTIVATE_MACTAG_V_GEN_FAIL);
    CASE_DEFINE_TO_STR(CKR_STC_ACTIVATE_RESP_GEN_FAIL);
    CASE_DEFINE_TO_STR(CKR_CHALLENGE_INCORRECT);
    CASE_DEFINE_TO_STR(CKR_ACCESS_ID_INVALID);
    CASE_DEFINE_TO_STR(CKR_ACCESS_ID_ALREADY_EXISTS);
    CASE_DEFINE_TO_STR(CKR_PARTITION_ROLE_DESC_VERSION_INVALID);
    CASE_DEFINE_TO_STR(CKR_PARTITION_ROLE_POLICY_VERSION_INVALID);
    CASE_DEFINE_TO_STR(CKR_PARTITION_ROLE_POLICY_SET_VERSION_INVALID);
    CASE_DEFINE_TO_STR(CKR_SESSION_CONTEXT_NOT_ALLOCATED);
    CASE_DEFINE_TO_STR(CKR_SESSION_CONTEXT_ALREADY_ALLOCATED);
    CASE_DEFINE_TO_STR(CKR_OBJECT_ALREADY_EXISTS);
    CASE_DEFINE_TO_STR(CKR_KEK_RETRY_FAILURE);
    CASE_DEFINE_TO_STR(CKR_RNG_RESEED_TOO_EARLY);
    CASE_DEFINE_TO_STR(CKR_INVALID_BL_ITB_AUTH_HEADER);
    CASE_DEFINE_TO_STR(CKR_POLICY_ID_INVALID);
    CASE_DEFINE_TO_STR(CKR_CONFIG_ILLEGAL);
    CASE_DEFINE_TO_STR(CKR_CONFIG_FAILS_DEPENDENCIES);
    CASE_DEFINE_TO_STR(CKR_HSM_RESTART_REQUIRED);
    CASE_DEFINE_TO_STR(CKR_BIP32_CHILD_INDEX_INVALID);
    CASE_DEFINE_TO_STR(CKR_BIP32_INVALID_HARDENED_DERIVATION);
    CASE_DEFINE_TO_STR(CKR_BIP32_MASTER_SEED_LEN_INVALID);
    CASE_DEFINE_TO_STR(CKR_BIP32_MASTER_SEED_INVALID);
    CASE_DEFINE_TO_STR(CKR_BIP32_INVALID_KEY_PATH_LEN);
    }
    return ("CKR_UNKNOWN");
}

/*****************************************************************************
*
* FUNCTION     : GetKeyType()
*
* DESCRIPTION  : Returns a string that represents the input key type.
*
* PARAMETERS   : CK_ULONG usCode
*
* RETURN VALUE : char *
*
\****************************************************************************/
const char *GetKeyType(CK_ULONG usCode)
{
   switch(usCode)
   {
   CASE_DEFINE_TO_STR(CKK_RSA);
   CASE_DEFINE_TO_STR(CKK_DSA);
   CASE_DEFINE_TO_STR(CKK_KCDSA);
   CASE_DEFINE_TO_STR(CKK_DH);
   CASE_DEFINE_TO_STR(CKK_ECDSA);
   CASE_DEFINE_TO_STR(CKK_GENERIC_SECRET);
   CASE_DEFINE_TO_STR(CKK_RC2);
   CASE_DEFINE_TO_STR(CKK_RC4);
   CASE_DEFINE_TO_STR(CKK_DES);
   CASE_DEFINE_TO_STR(CKK_DES2);
   CASE_DEFINE_TO_STR(CKK_DES3);
   CASE_DEFINE_TO_STR(CKK_AES);
   CASE_DEFINE_TO_STR(CKK_SEED);
   CASE_DEFINE_TO_STR(CKK_RC5);
   CASE_DEFINE_TO_STR(CKK_IDEA);
   CASE_DEFINE_TO_STR(CKK_SKIPJACK);
   CASE_DEFINE_TO_STR(CKK_BATON);
   CASE_DEFINE_TO_STR(CKK_JUNIPER);
   CASE_DEFINE_TO_STR(CKK_CDMF);
   CASE_DEFINE_TO_STR(CKK_CAST);
   CASE_DEFINE_TO_STR(CKK_CAST3);
   CASE_DEFINE_TO_STR(CKK_CAST5);
   CASE_DEFINE_TO_STR(CKK_ARIA);
   CASE_DEFINE_TO_STR(CKK_X9_42_DH);
   CASE_DEFINE_TO_STR(CKK_EC_EDWARDS);
   CASE_DEFINE_TO_STR(CKK_EC_MONTGOMERY);
   CASE_DEFINE_TO_STR(CKK_VENDOR_DEFINED);
   CASE_DEFINE_TO_STR(CKK_BIP32);
   }

   return "CKK_UNKNOWN";
}

#if 0
/*****************************************************************************
*
* FUNCTION     : GetAttributeType()
*
* DESCRIPTION  : Returns a string representation of the input attribute
*                type.  Those strings match the ones used in GetAttributeType().
*
* PARAMETERS   : CK_ATTRIBUTE_TYPE type
*
* RETURN VALUE : char *
*
\****************************************************************************/
const char *GetAttributeType(CK_ATTRIBUTE_TYPE type)
{
   switch(type)
   {
   CASE_DEFINE_TO_STR(CKA_CLASS);
   CASE_DEFINE_TO_STR(CKA_TOKEN);
   CASE_DEFINE_TO_STR(CKA_PRIVATE);
   CASE_DEFINE_TO_STR(CKA_LABEL);
   CASE_DEFINE_TO_STR(CKA_APPLICATION);
   CASE_DEFINE_TO_STR(CKA_VALUE);
   CASE_DEFINE_TO_STR(CKA_CERTIFICATE_TYPE);
   CASE_DEFINE_TO_STR(CKA_ISSUER);
   CASE_DEFINE_TO_STR(CKA_SERIAL_NUMBER);
   CASE_DEFINE_TO_STR(CKA_START_DATE);
   CASE_DEFINE_TO_STR(CKA_END_DATE);
   CASE_DEFINE_TO_STR(CKA_KEY_TYPE);
   CASE_DEFINE_TO_STR(CKA_SUBJECT);
   CASE_DEFINE_TO_STR(CKA_ID);
   CASE_DEFINE_TO_STR(CKA_SENSITIVE);
   CASE_DEFINE_TO_STR(CKA_ENCRYPT);
   CASE_DEFINE_TO_STR(CKA_DECRYPT);
   CASE_DEFINE_TO_STR(CKA_WRAP);
   CASE_DEFINE_TO_STR(CKA_UNWRAP);
   CASE_DEFINE_TO_STR(CKA_SIGN);
   CASE_DEFINE_TO_STR(CKA_SIGN_RECOVER);
   CASE_DEFINE_TO_STR(CKA_VERIFY_RECOVER);
   CASE_DEFINE_TO_STR(CKA_VERIFY);
   CASE_DEFINE_TO_STR(CKA_DERIVE);
   CASE_DEFINE_TO_STR(CKA_MODULUS);
   CASE_DEFINE_TO_STR(CKA_MODULUS_BITS);
   CASE_DEFINE_TO_STR(CKA_PUBLIC_EXPONENT);
   CASE_DEFINE_TO_STR(CKA_PRIVATE_EXPONENT);
   CASE_DEFINE_TO_STR(CKA_PRIME_1);
   CASE_DEFINE_TO_STR(CKA_PRIME_2);
   CASE_DEFINE_TO_STR(CKA_EXPONENT_1);
   CASE_DEFINE_TO_STR(CKA_EXPONENT_2);
   CASE_DEFINE_TO_STR(CKA_COEFFICIENT);
   CASE_DEFINE_TO_STR(CKA_PRIME);
   CASE_DEFINE_TO_STR(CKA_SUBPRIME);
   CASE_DEFINE_TO_STR(CKA_BASE);
   CASE_DEFINE_TO_STR(CKA_VALUE_BITS);
   CASE_DEFINE_TO_STR(CKA_VALUE_LEN);
   CASE_DEFINE_TO_STR(CKA_CCM_PRIVATE);
   CASE_DEFINE_TO_STR(CKA_FINGERPRINT_SHA1);
   CASE_DEFINE_TO_STR(CKA_ECDSA_PARAMS);
   CASE_DEFINE_TO_STR(CKA_EC_POINT);
   CASE_DEFINE_TO_STR(CKA_EXTRACTABLE);
   CASE_DEFINE_TO_STR(CKA_LOCAL);
   CASE_DEFINE_TO_STR(CKA_NEVER_EXTRACTABLE);
   CASE_DEFINE_TO_STR(CKA_ALWAYS_SENSITIVE);
   CASE_DEFINE_TO_STR(CKA_MODIFIABLE);
   CASE_DEFINE_TO_STR(CKA_VENDOR_DEFINED);
   CASE_DEFINE_TO_STR(CKA_OUID);
   CASE_DEFINE_TO_STR(CKA_X9_31_GENERATED);
   CASE_DEFINE_TO_STR(CKA_PKC_TCTRUST);
   CASE_DEFINE_TO_STR(CKA_PKC_CITS);
   CASE_DEFINE_TO_STR(CKA_PKC_ECC);
   CASE_DEFINE_TO_STR(CKA_PRIME_BITS);
   CASE_DEFINE_TO_STR(CKA_SUBPRIME_BITS);
   CASE_DEFINE_TO_STR(CKA_USAGE_COUNT);
   CASE_DEFINE_TO_STR(CKA_USAGE_LIMIT);
   CASE_DEFINE_TO_STR(CKA_EKM_UID);
   CASE_DEFINE_TO_STR(CKA_GENERIC_1);
   CASE_DEFINE_TO_STR(CKA_GENERIC_2);
   CASE_DEFINE_TO_STR(CKA_GENERIC_3);
   CASE_DEFINE_TO_STR(CKA_FINGERPRINT_SHA256);
   CASE_DEFINE_TO_STR(CKA_RESET_ON_INIT);
   CASE_DEFINE_TO_STR(CKA_HW_FEATURE_TYPE);
   CASE_DEFINE_TO_STR(CKA_HAS_RESET);
   CASE_DEFINE_TO_STR(CKA_SLOT_ID);
   CASE_DEFINE_TO_STR(CKA_ROLE_DESCRIPTORS);
   CASE_DEFINE_TO_STR(CKA_USER_VALUE);
   CASE_DEFINE_TO_STR(CKA_INITIALIZER);
   CASE_DEFINE_TO_STR(CKA_POLICY);
   CASE_DEFINE_TO_STR(CKA_ACTIVE);
   CASE_DEFINE_TO_STR(CKA_INITIALIZED);
   CASE_DEFINE_TO_STR(CKA_PIN_TO_BE_CHANGED);
   CASE_DEFINE_TO_STR(CKA_LOCKED_OUT);
   CASE_DEFINE_TO_STR(CKA_ACTIVATED);
   CASE_DEFINE_TO_STR(CKA_HAS_DOMAIN);
   CASE_DEFINE_TO_STR(CKA_LOGIN_ATTEMPTS_LEFT);
   CASE_DEFINE_TO_STR(CKA_PRIMARY_AUTH_METHOD);
   CASE_DEFINE_TO_STR(CKA_SECONDARY_AUTH_METHOD);
   CASE_DEFINE_TO_STR(CKA_ROLE_SHORT_NAME);
   CASE_DEFINE_TO_STR(CKA_VERSION);
   CASE_DEFINE_TO_STR(CKA_TEMPERATURE_STR);
   CASE_DEFINE_TO_STR(CKA_SECURITY_MODE);
   CASE_DEFINE_TO_STR(CKA_WARNING_THRESHOLD);
   CASE_DEFINE_TO_STR(CKA_UNWRAP_TEMPLATE);
   CASE_DEFINE_TO_STR(CKA_DERIVE_TEMPLATE);
   CASE_DEFINE_TO_STR(CKA_CHECK_VALUE);
   CASE_DEFINE_TO_STR(CKA_CHECK_VALUE_PTK);
   CASE_DEFINE_TO_STR(CKA_BIP32_CHAIN_CODE);
   CASE_DEFINE_TO_STR(CKA_BIP32_VERSION_BYTES);
   CASE_DEFINE_TO_STR(CKA_BIP32_CHILD_INDEX);
   CASE_DEFINE_TO_STR(CKA_BIP32_CHILD_DEPTH);
   CASE_DEFINE_TO_STR(CKA_BIP32_ID);
   CASE_DEFINE_TO_STR(CKA_BIP32_FINGERPRINT);
   CASE_DEFINE_TO_STR(CKA_BIP32_PARENT_FINGERPRINT);
   }
   return "CKA_UNKNOWN";
}

/*****************************************************************************
*
* FUNCTION     : GetObjectClass()
*
* DESCRIPTION  : Returns a string representing the input object class
*
* PARAMETERS   : CK_ULONG usCode
*
* RETURN VALUE : char *
*
\****************************************************************************/
const char *GetObjectClass(CK_ULONG usCode)
{
   switch(usCode)
   {
   CASE_DEFINE_TO_STR(CKO_DATA);
   CASE_DEFINE_TO_STR(CKO_CERTIFICATE);
   CASE_DEFINE_TO_STR(CKO_PUBLIC_KEY);
   CASE_DEFINE_TO_STR(CKO_PRIVATE_KEY);
   CASE_DEFINE_TO_STR(CKO_SECRET_KEY);
   CASE_DEFINE_TO_STR(CKO_DOMAIN_PARAMETERS);
   CASE_DEFINE_TO_STR(CKO_SLOT);
   CASE_DEFINE_TO_STR(CKO_CERTIFICATE_REQUEST);
   CASE_DEFINE_TO_STR(CKO_CRL);
   CASE_DEFINE_TO_STR(CKO_ADAPTER);
   CASE_DEFINE_TO_STR(CKO_FM);
   CASE_DEFINE_TO_STR(CKO_TOKEN_ROLE_POLICY_SET);
   CASE_DEFINE_TO_STR(CKO_TOKEN_ROLE_POLICY);
   CASE_DEFINE_TO_STR(CKO_TOKEN_ROLE_DESCRIPTOR);
   CASE_DEFINE_TO_STR(CKO_TOKEN_ROLE_STATE);
   CASE_DEFINE_TO_STR(CKO_HW_FEATURE);
   }

   return "CKO_UNKNOWN";
}

/****************************************************************************\
*
* FUNCTION     : GetHwFeatureType()
*
* DESCRIPTION  : Returns a string representation of the input hardware feature
*                type.
*
* PARAMETERS   : CK_HW_FEATURE_TYPE type
*
* RETURN VALUE : char *
*
\****************************************************************************/
const char *GetHwFeatureType(CK_HW_FEATURE_TYPE type)
{
   switch(type)
   {
      CASE_DEFINE_TO_STR(CKH_MONOTONIC_COUNTER);
      CASE_DEFINE_TO_STR(CKH_CLOCK);
      CASE_DEFINE_TO_STR(CKH_USER_INTERFACE);
      CASE_DEFINE_TO_STR(CKH_TEMPERATURE);
      CASE_DEFINE_TO_STR(CKH_BATTERY);
      CASE_DEFINE_TO_STR(CKH_FAN);
      default: break;
   }
   return "CKH_UNKNOWN";
}

/*****************************************************************************
*
* FUNCTION     : GetCertificateType()
*
* DESCRIPTION  : Returns a string which represents the input certificate type.
*
* PARAMETERS   : CK_ULONG usCode
*
* RETURN VALUE : char *
*
\****************************************************************************/
const char *GetCertificateType(CK_ULONG usCode)
{
   switch(usCode)
   {
   CASE_DEFINE_TO_STR(CKC_X_509);
   }

   return "CKC_UNKNOWN";
}

/*****************************************************************************
*
* FUNCTION     : GetErrorCodeForString()
*
* DESCRIPTION  : Returns an error code that represents the input error code
*                string.
*
* PARAMETERS   : char *psErrorCodeString
*
* RETURN VALUE : CK_RV
*
* NOTE         : When adding an error code remember to add it and its string to
*                CKR_LookupTable[] and routine GetErrorCode().
*
\****************************************************************************/
// Return Value Table struct
typedef struct CKR_Table
{
    const char *CKR_String;
    CK_RV       CKR_Value;
} CKR_Table;

#define DEFINE_FROM_STR(define) {#define, define}

// Return Value Lookup Table
static CKR_Table CKR_LookupTable[]=
{
   DEFINE_FROM_STR(CKR_OK),
   DEFINE_FROM_STR(CKR_CANCEL),
   DEFINE_FROM_STR(CKR_HOST_MEMORY),
   DEFINE_FROM_STR(CKR_SLOT_ID_INVALID),

   DEFINE_FROM_STR(CKR_GENERAL_ERROR),
   DEFINE_FROM_STR(CKR_FUNCTION_FAILED),
   DEFINE_FROM_STR(CKR_ARGUMENTS_BAD),
   DEFINE_FROM_STR(CKR_NO_EVENT),
   DEFINE_FROM_STR(CKR_NEED_TO_CREATE_THREADS),
   DEFINE_FROM_STR(CKR_CANT_LOCK),

   DEFINE_FROM_STR(CKR_ATTRIBUTE_READ_ONLY),
   DEFINE_FROM_STR(CKR_ATTRIBUTE_SENSITIVE),
   DEFINE_FROM_STR(CKR_ATTRIBUTE_TYPE_INVALID),
   DEFINE_FROM_STR(CKR_ATTRIBUTE_VALUE_INVALID),
   DEFINE_FROM_STR(CKR_DATA_INVALID),
   DEFINE_FROM_STR(CKR_DATA_LEN_RANGE),
   DEFINE_FROM_STR(CKR_DEVICE_ERROR),
   DEFINE_FROM_STR(CKR_DEVICE_MEMORY),
   DEFINE_FROM_STR(CKR_DEVICE_REMOVED),
   DEFINE_FROM_STR(CKR_ENCRYPTED_DATA_INVALID),
   DEFINE_FROM_STR(CKR_ENCRYPTED_DATA_LEN_RANGE),
   DEFINE_FROM_STR(CKR_FUNCTION_CANCELED),
   DEFINE_FROM_STR(CKR_FUNCTION_NOT_PARALLEL),
   DEFINE_FROM_STR(CKR_FUNCTION_PARALLEL),
   DEFINE_FROM_STR(CKR_FUNCTION_NOT_SUPPORTED),

   DEFINE_FROM_STR(CKR_KEY_HANDLE_INVALID),
   DEFINE_FROM_STR(CKR_KEY_SIZE_RANGE),
   DEFINE_FROM_STR(CKR_KEY_TYPE_INCONSISTENT),
   DEFINE_FROM_STR(CKR_KEY_UNEXTRACTABLE),
   DEFINE_FROM_STR(CKR_KEY_NOT_NEEDED),
   DEFINE_FROM_STR(CKR_KEY_CHANGED),
   DEFINE_FROM_STR(CKR_KEY_NEEDED),
   DEFINE_FROM_STR(CKR_KEY_INDIGESTIBLE),
   DEFINE_FROM_STR(CKR_KEY_FUNCTION_NOT_PERMITTED),
   DEFINE_FROM_STR(CKR_KEY_NOT_WRAPPABLE),

   DEFINE_FROM_STR(CKR_MECHANISM_INVALID),
   DEFINE_FROM_STR(CKR_MECHANISM_PARAM_INVALID),

   DEFINE_FROM_STR(CKR_OBJECT_HANDLE_INVALID),
   DEFINE_FROM_STR(CKR_OPERATION_ACTIVE),
   DEFINE_FROM_STR(CKR_OPERATION_NOT_INITIALIZED),
   DEFINE_FROM_STR(CKR_PIN_INCORRECT),
   DEFINE_FROM_STR(CKR_PIN_INVALID),
   DEFINE_FROM_STR(CKR_PIN_LEN_RANGE),
   DEFINE_FROM_STR(CKR_PIN_EXPIRED),
   DEFINE_FROM_STR(CKR_PIN_LOCKED),

   DEFINE_FROM_STR(CKR_SESSION_CLOSED),
   DEFINE_FROM_STR(CKR_SESSION_COUNT),
   DEFINE_FROM_STR(CKR_SESSION_EXCLUSIVE_EXISTS),
   DEFINE_FROM_STR(CKR_SESSION_HANDLE_INVALID),
   DEFINE_FROM_STR(CKR_SESSION_PARALLEL_NOT_SUPPORTED),
   DEFINE_FROM_STR(CKR_SESSION_READ_ONLY),
   DEFINE_FROM_STR(CKR_SESSION_EXISTS),
   DEFINE_FROM_STR(CKR_SESSION_READ_ONLY_EXISTS),
   DEFINE_FROM_STR(CKR_SESSION_READ_WRITE_SO_EXISTS),

   DEFINE_FROM_STR(CKR_SIGNATURE_INVALID),
   DEFINE_FROM_STR(CKR_SIGNATURE_LEN_RANGE),
   DEFINE_FROM_STR(CKR_TEMPLATE_INCOMPLETE),
   DEFINE_FROM_STR(CKR_TEMPLATE_INCONSISTENT),
   DEFINE_FROM_STR(CKR_TOKEN_NOT_PRESENT),
   DEFINE_FROM_STR(CKR_TOKEN_NOT_RECOGNIZED),
   DEFINE_FROM_STR(CKR_TOKEN_WRITE_PROTECTED),
   DEFINE_FROM_STR(CKR_UNWRAPPING_KEY_HANDLE_INVALID),
   DEFINE_FROM_STR(CKR_UNWRAPPING_KEY_SIZE_RANGE),
   DEFINE_FROM_STR(CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT),

   DEFINE_FROM_STR(CKR_USER_ALREADY_LOGGED_IN),
   DEFINE_FROM_STR(CKR_USER_NOT_LOGGED_IN),
   DEFINE_FROM_STR(CKR_USER_PIN_NOT_INITIALIZED),
   DEFINE_FROM_STR(CKR_USER_TYPE_INVALID),
   DEFINE_FROM_STR(CKR_USER_ANOTHER_ALREADY_LOGGED_IN),
   DEFINE_FROM_STR(CKR_USER_TOO_MANY_TYPES),

   DEFINE_FROM_STR(CKR_WRAPPED_KEY_INVALID),
   DEFINE_FROM_STR(CKR_WRAPPED_KEY_LEN_RANGE),
   DEFINE_FROM_STR(CKR_WRAPPING_KEY_HANDLE_INVALID),
   DEFINE_FROM_STR(CKR_WRAPPING_KEY_SIZE_RANGE),
   DEFINE_FROM_STR(CKR_WRAPPING_KEY_TYPE_INCONSISTENT),

   DEFINE_FROM_STR(CKR_RANDOM_SEED_NOT_SUPPORTED),
   DEFINE_FROM_STR(CKR_RANDOM_NO_RNG),
   DEFINE_FROM_STR(CKR_DOMAIN_PARAMS_INVALID),
   DEFINE_FROM_STR(CKR_INSERTION_CALLBACK_NOT_SUPPORTED),
   DEFINE_FROM_STR(CKR_BUFFER_TOO_SMALL),

   DEFINE_FROM_STR(CKR_SAVED_STATE_INVALID),
   DEFINE_FROM_STR(CKR_INFORMATION_SENSITIVE),
   DEFINE_FROM_STR(CKR_STATE_UNSAVEABLE),

   DEFINE_FROM_STR(CKR_CRYPTOKI_NOT_INITIALIZED),
   DEFINE_FROM_STR(CKR_CRYPTOKI_ALREADY_INITIALIZED),
   DEFINE_FROM_STR(CKR_MUTEX_BAD),
   DEFINE_FROM_STR(CKR_MUTEX_NOT_LOCKED),

   DEFINE_FROM_STR(CKR_VENDOR_DEFINED),

   DEFINE_FROM_STR(CKR_GENERAL_ERROR),
   DEFINE_FROM_STR(CKR_FUNCTION_NOT_SUPPORTED),
   DEFINE_FROM_STR(CKR_NO_EVENT),
   DEFINE_FROM_STR(CKR_RC_ERROR),
   DEFINE_FROM_STR(CKR_CONTAINER_HANDLE_INVALID),
   DEFINE_FROM_STR(CKR_TOO_MANY_CONTAINERS),
   DEFINE_FROM_STR(CKR_USER_LOCKED_OUT),
   DEFINE_FROM_STR(CKR_CLONING_PARAMETER_ALREADY_EXISTS),
   DEFINE_FROM_STR(CKR_CLONING_PARAMETER_MISSING),
   DEFINE_FROM_STR(CKR_CERTIFICATE_DATA_MISSING),
   DEFINE_FROM_STR(CKR_CERTIFICATE_DATA_INVALID),
   DEFINE_FROM_STR(CKR_CERTIFICATE_TYPE_INVALID),
   DEFINE_FROM_STR(CKR_INVALID_UTILIZATION_METRICS),
   DEFINE_FROM_STR(CKR_UTILIZATION_BIN_ID_INVALID),
   DEFINE_FROM_STR(CKR_UTILIZATION_COUNTER_ID_INVALID),
   DEFINE_FROM_STR(CKR_INVALID_SERIAL_NUM),

   DEFINE_FROM_STR(CKR_FM_ID_INVALID),
   DEFINE_FROM_STR(CKR_FM_NOT_SUPPORTED),
   DEFINE_FROM_STR(CKR_FM_NEVER_ENABLED),
   DEFINE_FROM_STR(CKR_FM_DISABLED),
   DEFINE_FROM_STR(CKR_FM_SMFS_INACTIVE),
   DEFINE_FROM_STR(CKR_FM_CFG_ALLOWEDFLAG_DISABLED),

   DEFINE_FROM_STR(CKR_ACCEL_DEVICE_ERROR),
   DEFINE_FROM_STR(CKR_WRAPPING_ERROR),
   DEFINE_FROM_STR(CKR_UNWRAPPING_ERROR),
   DEFINE_FROM_STR(CKR_MAC_MISSING),
   DEFINE_FROM_STR(CKR_DAC_POLICY_PID_MISMATCH),
   DEFINE_FROM_STR(CKR_DAC_MISSING),
   DEFINE_FROM_STR(CKR_BAD_DAC),
   DEFINE_FROM_STR(CKR_SSK_MISSING),
   DEFINE_FROM_STR(CKR_BAD_MAC),
   DEFINE_FROM_STR(CKR_DAK_MISSING),
   DEFINE_FROM_STR(CKR_BAD_DAK),
   DEFINE_FROM_STR(CKR_SIM_AUTHORIZATION_FAILED),
   DEFINE_FROM_STR(CKR_SIM_VERSION_UNSUPPORTED),
   DEFINE_FROM_STR(CKR_SIM_CORRUPT_DATA),
   DEFINE_FROM_STR(CKR_USER_NOT_AUTHORIZED),
   DEFINE_FROM_STR(CKR_MAX_OBJECT_COUNT_EXCEEDED),
   DEFINE_FROM_STR(CKR_SO_LOGIN_FAILURE_THRESHOLD),

   DEFINE_FROM_STR(CKR_SIM_AUTHFORM_INVALID),
   DEFINE_FROM_STR(CKR_CITS_DAK_MISSING),
   DEFINE_FROM_STR(CKR_UNABLE_TO_CONNECT),
   DEFINE_FROM_STR(CKR_CALLBACK_ERROR),
   DEFINE_FROM_STR(CKR_SECURITY_PARAMETER_MISSING),
   DEFINE_FROM_STR(CKR_SP_TIMEOUT),
   DEFINE_FROM_STR(CKR_TIMEOUT),
   DEFINE_FROM_STR(CKR_ECC_UNKNOWN_CURVE),
   DEFINE_FROM_STR(CKR_MTK_ZEROIZED),
   DEFINE_FROM_STR(CKR_MTK_STATE_INVALID),
   DEFINE_FROM_STR(CKR_MTK_SPLIT_INVALID),
   DEFINE_FROM_STR(CKR_CMD_NOT_ALLOWED_HSM_IN_TRANSPORT),
   DEFINE_FROM_STR(CKR_HSM_TAMPERED),
   DEFINE_FROM_STR(CKR_INVALID_ENTRY_TYPE),
   DEFINE_FROM_STR(CKR_HSM_STORAGE_FULL),
   DEFINE_FROM_STR(CKR_CONTAINER_OBJECT_STORAGE_FULL),
   DEFINE_FROM_STR(CKR_DEVICE_TIMEOUT),
   DEFINE_FROM_STR(CKR_AGAIN),
   DEFINE_FROM_STR(CKR_KEY_NOT_ACTIVE),

   DEFINE_FROM_STR(CKR_KEY_NOT_KEKABLE),
   DEFINE_FROM_STR(CKR_MECHANISM_INVALID_FOR_FP),
   DEFINE_FROM_STR(CKR_OPERATION_INVALID_FOR_FP),
   DEFINE_FROM_STR(CKR_SESSION_HANDLE_INVALID_FOR_FP),

   DEFINE_FROM_STR(CKR_OBJECT_READ_ONLY),
   DEFINE_FROM_STR(CKR_SLOT_NOT_EMPTY),
   DEFINE_FROM_STR(CKR_USER_ALREADY_ACTIVATED),

   DEFINE_FROM_STR(CKR_PED_UNPLUGGED),
   DEFINE_FROM_STR(CKR_ECC_POINT_INVALID),
   DEFINE_FROM_STR(CKR_CONFIG_CHANGE_ILLEGAL),
   DEFINE_FROM_STR(CKR_OPERATION_NOT_ALLOWED),
   DEFINE_FROM_STR(CKR_LICENSE_CAPACITY_EXCEEDED),

   DEFINE_FROM_STR(CKR_LOG_FILE_NOT_OPEN),
   DEFINE_FROM_STR(CKR_LOG_FILE_WRITE_ERROR),
   DEFINE_FROM_STR(CKR_LOG_BAD_FILE_NAME),
   DEFINE_FROM_STR(CKR_LOG_FULL),
   DEFINE_FROM_STR(CKR_LOG_NO_KCV),
   DEFINE_FROM_STR(CKR_LOG_BAD_RECORD_HMAC),
   DEFINE_FROM_STR(CKR_LOG_BAD_TIME),
   DEFINE_FROM_STR(CKR_LOG_AUDIT_NOT_INITIALIZED),
   DEFINE_FROM_STR(CKR_LOG_RESYNC_NEEDED),
   DEFINE_FROM_STR(CKR_AUDIT_LOGIN_TIMEOUT_IN_PROGRESS),
   DEFINE_FROM_STR(CKR_AUDIT_LOGIN_FAILURE_THRESHOLD),

   DEFINE_FROM_STR(CKR_INVALID_FUF_TARGET),
   DEFINE_FROM_STR(CKR_INVALID_FUF_HEADER),
   DEFINE_FROM_STR(CKR_INVALID_FUF_VERSION),
   DEFINE_FROM_STR(CKR_ECC_ECC_RESULT_AT_INF),

   DEFINE_FROM_STR(CKR_STC_NO_CONTEXT),
   DEFINE_FROM_STR(CKR_STC_CLIENT_IDENTITY_NOT_CONFIGURED),
   DEFINE_FROM_STR(CKR_STC_PARTITION_IDENTITY_NOT_CONFIGURED),
   DEFINE_FROM_STR(CKR_STC_DH_KEYGEN_ERROR),
   DEFINE_FROM_STR(CKR_STC_CIPHER_SUITE_REJECTED),
   DEFINE_FROM_STR(CKR_STC_DH_KEY_NOT_FROM_SAME_GROUP),
   DEFINE_FROM_STR(CKR_STC_COMPUTE_DH_KEY_ERROR),
   DEFINE_FROM_STR(CKR_STC_FIRST_PHASE_KDF_ERROR),
   DEFINE_FROM_STR(CKR_STC_SECOND_PHASE_KDF_ERROR),
   DEFINE_FROM_STR(CKR_STC_KEY_CONFIRMATION_FAILED),
   DEFINE_FROM_STR(CKR_STC_NO_SESSION_KEY),
   DEFINE_FROM_STR(CKR_STC_RESPONSE_BAD_MAC),
   DEFINE_FROM_STR(CKR_STC_NOT_ENABLED),
   DEFINE_FROM_STR(CKR_STC_CLIENT_HANDLE_INVALID),
   DEFINE_FROM_STR(CKR_STC_SESSION_INVALID),
   DEFINE_FROM_STR(CKR_STC_CONTAINER_INVALID),
   DEFINE_FROM_STR(CKR_STC_SEQUENCE_NUM_INVALID),
   DEFINE_FROM_STR(CKR_STC_NO_CHANNEL),
   DEFINE_FROM_STR(CKR_STC_RESPONSE_DECRYPT_ERROR),
   DEFINE_FROM_STR(CKR_STC_RESPONSE_REPLAYED),
   DEFINE_FROM_STR(CKR_STC_REKEY_CHANNEL_MISMATCH),
   DEFINE_FROM_STR(CKR_STC_RSA_ENCRYPT_ERROR),
   DEFINE_FROM_STR(CKR_STC_RSA_SIGN_ERROR),
   DEFINE_FROM_STR(CKR_STC_RSA_DECRYPT_ERROR),
   DEFINE_FROM_STR(CKR_STC_RESPONSE_UNEXPECTED_KEY),
   DEFINE_FROM_STR(CKR_STC_UNEXPECTED_NONCE_PAYLOAD_SIZE),
   DEFINE_FROM_STR(CKR_STC_UNEXPECTED_DH_DATA_SIZE),
   DEFINE_FROM_STR(CKR_STC_OPEN_CIPHER_MISMATCH),
   DEFINE_FROM_STR(CKR_STC_OPEN_DHNIST_PUBKEY_ERROR),
   DEFINE_FROM_STR(CKR_STC_OPEN_KEY_MATERIAL_GEN_FAIL),
   DEFINE_FROM_STR(CKR_STC_OPEN_RESP_GEN_FAIL),
   DEFINE_FROM_STR(CKR_STC_ACTIVATE_MACTAG_U_VERIFY_FAIL),
   DEFINE_FROM_STR(CKR_STC_ACTIVATE_MACTAG_V_GEN_FAIL),
   DEFINE_FROM_STR(CKR_STC_ACTIVATE_RESP_GEN_FAIL),
   DEFINE_FROM_STR(CKR_CHALLENGE_INCORRECT),
   DEFINE_FROM_STR(CKR_ACCESS_ID_INVALID),
   DEFINE_FROM_STR(CKR_ACCESS_ID_ALREADY_EXISTS),
   DEFINE_FROM_STR(CKR_RNG_RESEED_TOO_EARLY),
   DEFINE_FROM_STR(CKR_SESSION_CONTEXT_NOT_ALLOCATED),
   DEFINE_FROM_STR(CKR_SESSION_CONTEXT_ALREADY_ALLOCATED),
   DEFINE_FROM_STR(CKR_INVALID_BL_ITB_AUTH_HEADER),
   DEFINE_FROM_STR(CKR_POLICY_ID_INVALID),
   DEFINE_FROM_STR(CKR_CONFIG_ILLEGAL),
   DEFINE_FROM_STR(CKR_HSM_RESTART_REQUIRED),

   DEFINE_FROM_STR(CKR_BIP32_CHILD_INDEX_INVALID),
   DEFINE_FROM_STR(CKR_BIP32_INVALID_HARDENED_DERIVATION),
   DEFINE_FROM_STR(CKR_BIP32_MASTER_SEED_LEN_INVALID),
   DEFINE_FROM_STR(CKR_BIP32_MASTER_SEED_INVALID),
   DEFINE_FROM_STR(CKR_BIP32_INVALID_KEY_PATH_LEN)
};

/*****************************************************************************
*
* FUNCTION     : GetMechanismType()
*
* DESCRIPTION  : Returns a string representation of the input mechanism type.
*
* PARAMETERS   : CK_MECHANISM_TYPE type
*
* RETURN VALUE : char *
*
\****************************************************************************/
const char *GetMechanismType(CK_MECHANISM_TYPE type)
{
   switch (type)
   {
   CASE_DEFINE_TO_STR(CKM_RSA_PKCS_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_RSA_PKCS);
   CASE_DEFINE_TO_STR(CKM_RSA_9796);
   CASE_DEFINE_TO_STR(CKM_RSA_X_509);
   CASE_DEFINE_TO_STR(CKM_RSA_PKCS_OAEP);
   CASE_DEFINE_TO_STR(CKM_RSA_X9_31_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_RSA_FIPS_186_3_AUX_PRIME_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_RSA_FIPS_186_3_PRIME_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_RSA_X9_31);
   CASE_DEFINE_TO_STR(CKM_RSA_X9_31_NON_FIPS);
   CASE_DEFINE_TO_STR(CKM_SHA1_RSA_X9_31);
   CASE_DEFINE_TO_STR(CKM_SHA1_RSA_X9_31_NON_FIPS);
   CASE_DEFINE_TO_STR(CKM_SHA224_RSA_X9_31);
   CASE_DEFINE_TO_STR(CKM_SHA224_RSA_X9_31_NON_FIPS);
   CASE_DEFINE_TO_STR(CKM_SHA256_RSA_X9_31);
   CASE_DEFINE_TO_STR(CKM_SHA256_RSA_X9_31_NON_FIPS);
   CASE_DEFINE_TO_STR(CKM_SHA384_RSA_X9_31);
   CASE_DEFINE_TO_STR(CKM_SHA384_RSA_X9_31_NON_FIPS);
   CASE_DEFINE_TO_STR(CKM_SHA512_RSA_X9_31);
   CASE_DEFINE_TO_STR(CKM_SHA512_RSA_X9_31_NON_FIPS);
   CASE_DEFINE_TO_STR(CKM_RSA_PKCS_PSS);
   CASE_DEFINE_TO_STR(CKM_SHA1_RSA_PKCS_PSS);
   CASE_DEFINE_TO_STR(CKM_MD2_RSA_PKCS);
   CASE_DEFINE_TO_STR(CKM_MD5_RSA_PKCS);
   CASE_DEFINE_TO_STR(CKM_SHA1_RSA_PKCS);
   CASE_DEFINE_TO_STR(CKM_SHA224_RSA_PKCS);
   CASE_DEFINE_TO_STR(CKM_SHA256_RSA_PKCS);
   CASE_DEFINE_TO_STR(CKM_SHA384_RSA_PKCS);
   CASE_DEFINE_TO_STR(CKM_SHA512_RSA_PKCS);
   CASE_DEFINE_TO_STR(CKM_SHA224_RSA_PKCS_PSS);
   CASE_DEFINE_TO_STR(CKM_SHA256_RSA_PKCS_PSS);
   CASE_DEFINE_TO_STR(CKM_SHA384_RSA_PKCS_PSS);
   CASE_DEFINE_TO_STR(CKM_SHA512_RSA_PKCS_PSS);
   CASE_DEFINE_TO_STR(CKM_DSA_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_DSA);
   CASE_DEFINE_TO_STR(CKM_DSA_SHA1);
   CASE_DEFINE_TO_STR(CKM_DSA_SHA224);
   CASE_DEFINE_TO_STR(CKM_DSA_SHA256);
   CASE_DEFINE_TO_STR(CKM_KCDSA_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_KCDSA_HAS160);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA1);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA224);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA256);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA384);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA512);
   CASE_DEFINE_TO_STR(CKM_KCDSA_HAS160_NO_PAD);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA1_NO_PAD);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA224_NO_PAD);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA256_NO_PAD);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA384_NO_PAD);
   CASE_DEFINE_TO_STR(CKM_KCDSA_SHA512_NO_PAD);
   CASE_DEFINE_TO_STR(CKM_DH_PKCS_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_DH_PKCS_DERIVE);
   CASE_DEFINE_TO_STR(CKM_RC2_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_RC2_ECB);
   CASE_DEFINE_TO_STR(CKM_RC2_CBC);
   CASE_DEFINE_TO_STR(CKM_RC2_MAC);
   CASE_DEFINE_TO_STR(CKM_RC2_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_RC2_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_RC4_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_RC4);
   CASE_DEFINE_TO_STR(CKM_DES_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_DES_ECB);
   CASE_DEFINE_TO_STR(CKM_DES_CBC);
   CASE_DEFINE_TO_STR(CKM_DES_MAC);
   CASE_DEFINE_TO_STR(CKM_DES_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_DES_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_DES_CFB8);
   CASE_DEFINE_TO_STR(CKM_DES_CFB64);
   CASE_DEFINE_TO_STR(CKM_DES_OFB8);
   CASE_DEFINE_TO_STR(CKM_DES_OFB64);
   CASE_DEFINE_TO_STR(CKM_DES2_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_DES3_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_DES3_ECB);
   CASE_DEFINE_TO_STR(CKM_DES3_CBC);
   CASE_DEFINE_TO_STR(CKM_DES3_MAC);
   CASE_DEFINE_TO_STR(CKM_DES3_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_DES3_CMAC);
   CASE_DEFINE_TO_STR(CKM_DES3_CMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_DES3_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_DES3_CBC_PAD_IPSEC);
   CASE_DEFINE_TO_STR(CKM_DES3_CTR);
   CASE_DEFINE_TO_STR(CKM_CDMF_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_CDMF_ECB);
   CASE_DEFINE_TO_STR(CKM_CDMF_CBC);
   CASE_DEFINE_TO_STR(CKM_CDMF_MAC);
   CASE_DEFINE_TO_STR(CKM_CDMF_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_CDMF_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_MD2);
   CASE_DEFINE_TO_STR(CKM_MD2_HMAC);
   CASE_DEFINE_TO_STR(CKM_MD2_HMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_MD5);
   CASE_DEFINE_TO_STR(CKM_HAS160);
   CASE_DEFINE_TO_STR(CKM_MD5_HMAC);
   CASE_DEFINE_TO_STR(CKM_MD5_HMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_SHA_1);
   CASE_DEFINE_TO_STR(CKM_SHA_1_HMAC);
   CASE_DEFINE_TO_STR(CKM_SHA_1_HMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_SM3);
   CASE_DEFINE_TO_STR(CKM_SM3_HMAC);
   CASE_DEFINE_TO_STR(CKM_SM3_HMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_SHA224);
   CASE_DEFINE_TO_STR(CKM_SHA256);
   CASE_DEFINE_TO_STR(CKM_SHA224_HMAC);
   CASE_DEFINE_TO_STR(CKM_SHA256_HMAC);
   CASE_DEFINE_TO_STR(CKM_SHA224_HMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_SHA256_HMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_SHA384);
   CASE_DEFINE_TO_STR(CKM_SHA384_HMAC);
   CASE_DEFINE_TO_STR(CKM_SHA384_HMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_SHA512);
   CASE_DEFINE_TO_STR(CKM_SHA512_HMAC);
   CASE_DEFINE_TO_STR(CKM_SHA512_HMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_CAST_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_CAST_ECB);
   CASE_DEFINE_TO_STR(CKM_CAST_CBC);
   CASE_DEFINE_TO_STR(CKM_CAST_MAC);
   CASE_DEFINE_TO_STR(CKM_CAST_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_CAST_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_CAST3_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_CAST3_ECB);
   CASE_DEFINE_TO_STR(CKM_CAST3_CBC);
   CASE_DEFINE_TO_STR(CKM_CAST3_MAC);
   CASE_DEFINE_TO_STR(CKM_CAST3_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_CAST3_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_CAST5_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_CAST5_ECB);
   CASE_DEFINE_TO_STR(CKM_CAST5_CBC);
   CASE_DEFINE_TO_STR(CKM_CAST5_MAC);
   CASE_DEFINE_TO_STR(CKM_CAST5_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_CAST5_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_RC5_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_RC5_ECB);
   CASE_DEFINE_TO_STR(CKM_RC5_CBC);
   CASE_DEFINE_TO_STR(CKM_RC5_MAC);
   CASE_DEFINE_TO_STR(CKM_RC5_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_RC5_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_AES_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_AES_ECB);
   CASE_DEFINE_TO_STR(CKM_AES_CBC);
   CASE_DEFINE_TO_STR(CKM_AES_MAC);
   CASE_DEFINE_TO_STR(CKM_AES_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_AES_CMAC);
   CASE_DEFINE_TO_STR(CKM_AES_CMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_AES_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_AES_CBC_PAD_IPSEC);
   CASE_DEFINE_TO_STR(CKM_AES_CFB8);
   CASE_DEFINE_TO_STR(CKM_AES_CFB128);
   CASE_DEFINE_TO_STR(CKM_AES_OFB);
   CASE_DEFINE_TO_STR(CKM_AES_CTR);
   CASE_DEFINE_TO_STR(CKM_DES_ECB_ENCRYPT_DATA);
   CASE_DEFINE_TO_STR(CKM_DES_CBC_ENCRYPT_DATA);
   CASE_DEFINE_TO_STR(CKM_DES3_ECB_ENCRYPT_DATA);
   CASE_DEFINE_TO_STR(CKM_DES3_CBC_ENCRYPT_DATA);
   CASE_DEFINE_TO_STR(CKM_AES_ECB_ENCRYPT_DATA);
   CASE_DEFINE_TO_STR(CKM_AES_CBC_ENCRYPT_DATA);
   CASE_DEFINE_TO_STR(CKM_SEED_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_SEED_ECB);
   CASE_DEFINE_TO_STR(CKM_SEED_CBC);
   CASE_DEFINE_TO_STR(CKM_SEED_MAC);
   CASE_DEFINE_TO_STR(CKM_SEED_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_SEED_CMAC);
   CASE_DEFINE_TO_STR(CKM_SEED_CMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_SEED_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_SEED_CTR);
   CASE_DEFINE_TO_STR(CKM_SM4_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_SM4_ECB);
   CASE_DEFINE_TO_STR(CKM_SM4_CBC);
   CASE_DEFINE_TO_STR(CKM_SM4_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_SM2_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_SM2DSA);
   CASE_DEFINE_TO_STR(CKM_SM3_SM2DSA);
   CASE_DEFINE_TO_STR(CKM_SHA1_SM2DSA);
   CASE_DEFINE_TO_STR(CKM_SHA224_SM2DSA);
   CASE_DEFINE_TO_STR(CKM_SHA256_SM2DSA);
   CASE_DEFINE_TO_STR(CKM_SHA384_SM2DSA);
   CASE_DEFINE_TO_STR(CKM_SHA512_SM2DSA);
   CASE_DEFINE_TO_STR(CKM_IDEA_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_IDEA_ECB);
   CASE_DEFINE_TO_STR(CKM_IDEA_CBC);
   CASE_DEFINE_TO_STR(CKM_IDEA_MAC);
   CASE_DEFINE_TO_STR(CKM_IDEA_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_IDEA_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_GENERIC_SECRET_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_CONCATENATE_BASE_AND_KEY);
   CASE_DEFINE_TO_STR(CKM_CONCATENATE_BASE_AND_DATA);
   CASE_DEFINE_TO_STR(CKM_CONCATENATE_DATA_AND_BASE);
   CASE_DEFINE_TO_STR(CKM_XOR_BASE_AND_DATA);
   CASE_DEFINE_TO_STR(CKM_XOR_BASE_AND_DATA_W_KDF);
   CASE_DEFINE_TO_STR(CKM_XOR_BASE_AND_KEY);
   CASE_DEFINE_TO_STR(CKM_EXTRACT_KEY_FROM_KEY);
   CASE_DEFINE_TO_STR(CKM_SSL3_PRE_MASTER_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_SSL3_MASTER_KEY_DERIVE);
   CASE_DEFINE_TO_STR(CKM_SSL3_KEY_AND_MAC_DERIVE);
   CASE_DEFINE_TO_STR(CKM_SSL3_MD5_MAC);
   CASE_DEFINE_TO_STR(CKM_SSL3_SHA1_MAC);
   CASE_DEFINE_TO_STR(CKM_MD5_KEY_DERIVATION);
   CASE_DEFINE_TO_STR(CKM_MD2_KEY_DERIVATION);
   CASE_DEFINE_TO_STR(CKM_SHA1_KEY_DERIVATION);
   CASE_DEFINE_TO_STR(CKM_SM3_KEY_DERIVATION);
   CASE_DEFINE_TO_STR(CKM_SHA224_KEY_DERIVATION);
   CASE_DEFINE_TO_STR(CKM_SHA256_KEY_DERIVATION);
   CASE_DEFINE_TO_STR(CKM_SHA384_KEY_DERIVATION);
   CASE_DEFINE_TO_STR(CKM_SHA512_KEY_DERIVATION);
   CASE_DEFINE_TO_STR(CKM_PBE_MD2_DES_CBC);
   CASE_DEFINE_TO_STR(CKM_PBE_MD5_DES_CBC);
   CASE_DEFINE_TO_STR(CKM_PBE_MD5_CAST_CBC);
   CASE_DEFINE_TO_STR(CKM_PBE_MD5_CAST3_CBC);
   CASE_DEFINE_TO_STR(CKM_PBE_MD5_CAST5_CBC);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_CAST5_CBC);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_RC4_128);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_RC4_40);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_DES3_EDE_CBC);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_DES2_EDE_CBC);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_DES3_EDE_CBC_OLD);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_DES2_EDE_CBC_OLD);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_RC2_128_CBC);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_RC2_40_CBC);
   CASE_DEFINE_TO_STR(CKM_PKCS5_PBKD2);
   CASE_DEFINE_TO_STR(CKM_KEY_WRAP_LYNKS);
   CASE_DEFINE_TO_STR(CKM_KEY_WRAP_SET_OAEP);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_ECB64);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_CBC64);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_OFB64);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_CFB64);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_CFB32);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_CFB16);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_CFB8);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_WRAP);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_PRIVATE_WRAP);
   CASE_DEFINE_TO_STR(CKM_SKIPJACK_RELAYX);
   CASE_DEFINE_TO_STR(CKM_KEA_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_KEA_KEY_DERIVE);
   CASE_DEFINE_TO_STR(CKM_FORTEZZA_TIMESTAMP);
   CASE_DEFINE_TO_STR(CKM_BATON_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_BATON_ECB128);
   CASE_DEFINE_TO_STR(CKM_BATON_ECB96);
   CASE_DEFINE_TO_STR(CKM_BATON_CBC128);
   CASE_DEFINE_TO_STR(CKM_BATON_COUNTER);
   CASE_DEFINE_TO_STR(CKM_BATON_SHUFFLE);
   CASE_DEFINE_TO_STR(CKM_BATON_WRAP);
   CASE_DEFINE_TO_STR(CKM_ECDSA_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_ECDSA);
   CASE_DEFINE_TO_STR(CKM_ECDSA_SHA1);
   CASE_DEFINE_TO_STR(CKM_ECDSA_SHA224);
   CASE_DEFINE_TO_STR(CKM_ECDSA_SHA256);
   CASE_DEFINE_TO_STR(CKM_ECDSA_SHA384);
   CASE_DEFINE_TO_STR(CKM_ECDSA_SHA512);
   CASE_DEFINE_TO_STR(CKM_ECDSA_KEY_PAIR_GEN_W_EXTRA_BITS);
   CASE_DEFINE_TO_STR(CKM_ECDSA_GBCS_SHA256);
   CASE_DEFINE_TO_STR(CKM_ECDH1_DERIVE);
   CASE_DEFINE_TO_STR(CKM_ECDH1_COFACTOR_DERIVE);
   CASE_DEFINE_TO_STR(CKM_ECMQV_DERIVE);
   CASE_DEFINE_TO_STR(CKM_ECIES);
   CASE_DEFINE_TO_STR(CKM_JUNIPER_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_JUNIPER_ECB128);
   CASE_DEFINE_TO_STR(CKM_JUNIPER_CBC128);
   CASE_DEFINE_TO_STR(CKM_JUNIPER_COUNTER);
   CASE_DEFINE_TO_STR(CKM_JUNIPER_SHUFFLE);
   CASE_DEFINE_TO_STR(CKM_JUNIPER_WRAP);
   CASE_DEFINE_TO_STR(CKM_FASTHASH);
   CASE_DEFINE_TO_STR(CKM_ARIA_KEY_GEN);
   CASE_DEFINE_TO_STR(CKM_ARIA_ECB);
   CASE_DEFINE_TO_STR(CKM_ARIA_CBC);
   CASE_DEFINE_TO_STR(CKM_ARIA_MAC);
   CASE_DEFINE_TO_STR(CKM_ARIA_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_ARIA_CMAC);
   CASE_DEFINE_TO_STR(CKM_ARIA_CMAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_ARIA_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_ARIA_L_ECB);
   CASE_DEFINE_TO_STR(CKM_ARIA_L_CBC_PAD);
   CASE_DEFINE_TO_STR(CKM_ARIA_L_CBC);
   CASE_DEFINE_TO_STR(CKM_ARIA_L_MAC);
   CASE_DEFINE_TO_STR(CKM_ARIA_L_MAC_GENERAL);
   CASE_DEFINE_TO_STR(CKM_ARIA_CFB8);
   CASE_DEFINE_TO_STR(CKM_ARIA_CFB128);
   CASE_DEFINE_TO_STR(CKM_ARIA_OFB);
   CASE_DEFINE_TO_STR(CKM_ARIA_CTR);
   CASE_DEFINE_TO_STR(CKM_ARIA_ECB_ENCRYPT_DATA);
   CASE_DEFINE_TO_STR(CKM_ARIA_CBC_ENCRYPT_DATA);
   CASE_DEFINE_TO_STR(CKM_DSA_PARAMETER_GEN);
   CASE_DEFINE_TO_STR(CKM_DH_PKCS_PARAMETER_GEN);
   CASE_DEFINE_TO_STR(CKM_X9_42_DH_PARAMETER_GEN);
   CASE_DEFINE_TO_STR(CKM_X9_42_DH_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_X9_42_DH_DERIVE);
   CASE_DEFINE_TO_STR(CKM_X9_42_DH_HYBRID_DERIVE);
   CASE_DEFINE_TO_STR(CKM_KCDSA_PARAMETER_GEN);

   CASE_DEFINE_TO_STR(CKM_AES_GCM);
   CASE_DEFINE_TO_STR(CKM_AES_GCM_2_20a5d1);
   CASE_DEFINE_TO_STR(CKM_AES_GMAC);
   CASE_DEFINE_TO_STR(CKM_DES3_X919_MAC);
   CASE_DEFINE_TO_STR(CKM_DES2_DUKPT_PIN);
   CASE_DEFINE_TO_STR(CKM_DES2_DUKPT_MAC);
   CASE_DEFINE_TO_STR(CKM_DES2_DUKPT_MAC_RESP);
   CASE_DEFINE_TO_STR(CKM_DES2_DUKPT_DATA);
   CASE_DEFINE_TO_STR(CKM_DES2_DUKPT_DATA_RESP);
   CASE_DEFINE_TO_STR(CKM_NIST_PRF_KDF);
   CASE_DEFINE_TO_STR(CKM_PRF_KDF);

   CASE_DEFINE_TO_STR(CKM_AES_KEY_WRAP);
   CASE_DEFINE_TO_STR(CKM_AES_KW);
   CASE_DEFINE_TO_STR(CKM_AES_KWP);
   CASE_DEFINE_TO_STR(CKM_AES_XTS);

   CASE_DEFINE_TO_STR(CKM_CAST_KEY_GEN_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST_ECB_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST_CBC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST_MAC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST3_KEY_GEN_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST3_ECB_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST3_CBC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST3_MAC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_PBE_MD2_DES_CBC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_PBE_MD5_DES_CBC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_PBE_MD5_CAST_CBC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_PBE_MD5_CAST3_CBC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CONCATENATE_BASE_AND_KEY_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CONCATENATE_KEY_AND_BASE_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CONCATENATE_BASE_AND_DATA_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CONCATENATE_DATA_AND_BASE_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_XOR_BASE_AND_DATA_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_EXTRACT_KEY_FROM_KEY_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_MD5_KEY_DERIVATION_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_MD2_KEY_DERIVATION_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_SHA1_KEY_DERIVATION_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_GENERIC_SECRET_KEY_GEN_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST5_KEY_GEN_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST5_ECB_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST5_CBC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_CAST5_MAC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_PBE_SHA1_CAST5_CBC_OLD_XXX);
   CASE_DEFINE_TO_STR(CKM_EC_EDWARDS_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_EDDSA_NACL);
   CASE_DEFINE_TO_STR(CKM_EDDSA);
   CASE_DEFINE_TO_STR(CKM_SHA1_EDDSA_NACL);
   CASE_DEFINE_TO_STR(CKM_SHA224_EDDSA_NACL);
   CASE_DEFINE_TO_STR(CKM_SHA256_EDDSA_NACL);
   CASE_DEFINE_TO_STR(CKM_SHA384_EDDSA_NACL);
   CASE_DEFINE_TO_STR(CKM_SHA512_EDDSA_NACL);
   CASE_DEFINE_TO_STR(CKM_SHA1_EDDSA);
   CASE_DEFINE_TO_STR(CKM_SHA224_EDDSA);
   CASE_DEFINE_TO_STR(CKM_SHA256_EDDSA);
   CASE_DEFINE_TO_STR(CKM_SHA384_EDDSA);
   CASE_DEFINE_TO_STR(CKM_SHA512_EDDSA);
   CASE_DEFINE_TO_STR(CKM_EC_MONTGOMERY_KEY_PAIR_GEN);
   CASE_DEFINE_TO_STR(CKM_BIP32_MASTER_DERIVE);
   CASE_DEFINE_TO_STR(CKM_BIP32_CHILD_DERIVE);
   }

   return "Unknown Mechanism Type";
}
#endif
